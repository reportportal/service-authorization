server:
  port: 9999
#security:
#  oauth2:
#    resource:
#      filter-order: 3
spring:
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        tags:
          - urlprefix-${server.context-path:}/${spring.application.name} opts strip=/${spring.application.name}
          - traefik.frontend.rule=PathPrefixStrip:${server.context-path:}/${spring.application.name}
          - statusPageUrlPath=${server.contextPath:}/info
          - healthCheckUrlPath=${server.contextPath:}/health
        healthCheckPath: ${server.context-path:}/health
        register: true
        instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
        health-check-critical-timeout: 180s
      enabled: true
  jackson:
    default-property-inclusion: non_null
  session:
    store-type: jdbc
  datasource:
    driver-class-name: org.postgresql.Driver
    username: rpuser`
    password: rppass
    url: jdbc:postgresql://localhost:5432/reportportal
  jpa:
    properties:
      hibernate.jdbc.lob.non_contextual_creation: true
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
eureka:
  instance:
    hostname: ${HOSTNAME:localhost}
    status-page-url-path: ${server.contextPath:}/info
    health-check-url-path: ${server.contextPath:}/health
  ## Disabled by default
  client:
    register-with-eureka: false
    enabled: false


logging:
  level:
    org.springframework.security: debug

springfox:
  documentation:
    swagger:
      v2:
        path: /api-docs
## Consul as service registry
---
spring:
  profiles: consul
  cloud:
    consul:
      enabled: true
      discovery:
        register: true
eureka:
  client:
    register-with-eureka: false
    enabled: false

## Eureka as service registry
---
spring:
  profiles: eureka
  cloud:
    consul:
      enabled: false
      discovery:
        register: false
eureka:
  client:
    register-with-eureka: true
    enabled: true
---
