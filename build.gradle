plugins {
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springframework.boot' version '3.4.2'
    id 'java'
    id 'java-library'
    id "org.owasp.dependencycheck" version "11.1.1"
}

apply from: 'project-properties.gradle'
//apply from: "$scriptsUrl/build-docker.gradle"
apply from: "$scriptsUrl/build-info.gradle"
apply from: "$scriptsUrl/build-commons.gradle"
//apply from: "$scriptsUrl/build-quality.gradle"
apply from: "$scriptsUrl/release-service.gradle"
apply from: "$scriptsUrl/signing.gradle"

repositories {
    mavenCentral { url "https://repo1.maven.org/maven2" }
    if (!releaseMode) {
        maven { url 'https://jitpack.io' }
    }
}

ext['spring-boot.version'] = '3.4.2'
ext['hibernate-validator.version'] = '8.0.2.Final'
//ext['postgresql.version'] = '42.2.13'


dependencies {
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.guava:guava:33.3.0-jre'
    api 'org.apache.httpcomponents:httpclient:4.5.14'
    api 'com.fasterxml.woodstox:woodstox-core:6.5.1'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.hibernate', module: 'hibernate-core'
    }
    implementation 'org.postgresql:postgresql:42.7.3'
    api 'org.jasypt:jasypt:1.9.3'
    api 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    implementation 'org.springframework:spring-webmvc'
    api 'org.springframework:spring-web'
    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
    implementation 'net.coobird:thumbnailator:0.4.20'
    api 'org.apache.tika:tika-core:3.0.0'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

    implementation "software.amazon.awssdk:aws-core:${aws}"
    implementation "software.amazon.awssdk:sts:${aws}"
    api "org.apache.jclouds.api:s3:${jclouds}" // 2.6.0 switched to jakarta annotations!
    implementation "org.apache.jclouds.provider:aws-s3:${jclouds}"
    implementation "org.apache.jclouds.api:filesystem:${jclouds}"
    api('commons-validator:commons-validator:1.9.0') {
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }

    // Security
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework:spring-jdbc'
    //

    api ('org.springframework.security:spring-security-oauth2-client')
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server:1.4.2'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.security:spring-security-oauth2-core'
    runtimeOnly 'com.nimbusds:oauth2-oidc-sdk:9.43.4'
    implementation 'net.minidev:json-smart:2.4.10'
    implementation 'org.springframework.security:spring-security-jwt:1.1.1.RELEASE'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'org.springframework.security:spring-security-ldap'
    implementation 'org.springframework.security:spring-security-saml2-service-provider:6.4.2'
    implementation 'org.opensaml:opensaml-saml-api:4.0.1'
    implementation 'org.opensaml:opensaml-saml-impl:4.0.1'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'org.apache.santuario:xmlsec:3.0.3'
    implementation 'org.apache.commons:commons-collections4:4.4'

    api 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'
    api 'org.apache.commons:commons-compress:1.26.0'
    implementation 'org.cryptacular:cryptacular:1.1.4'
    implementation 'org.springframework:spring-core'
    implementation "com.rabbitmq:http-client:5.3.0"

    implementation "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"

    // add lombok support
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.flywaydb.flyway-test-extensions:flyway-spring-test:6.1.0'

    // testImplementation 'org.springframework.boot:spring-boot-testcontainers:' // spring boot 3.1+
    // compileOnly("org.springframework.boot:spring-boot-devtools")
    implementation platform("org.testcontainers:testcontainers-bom:${testContainers}")
    testImplementation "org.testcontainers:junit-jupiter:${testContainers}"
    testImplementation "org.testcontainers:postgresql:${testContainers}"
    testImplementation("org.testcontainers:minio:${testContainers}")

}

tasks.register('updateSubmodule', Exec) {
    commandLine 'git', 'submodule', 'update', '--init'
}

processResources {
    dependsOn(gitInfo)
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    options.encoding = "UTF-8"
    options.compilerArgs << "-parameters"
    options.debug = true
    options.debugOptions.debugLevel = "source,lines,vars"
}

bootJar {
    duplicatesStrategy = duplicatesStrategy.EXCLUDE
    System.getenv().containsKey("K8S") ? getArchiveFileName().set('app.jar') : archiveClassifier.set('exec')
}
jar.enabled(true)
jar.archiveClassifier.set('')

test {
    jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED' // TODO: remove in Spring Boot 3
    useJUnitPlatform()
    testLogging {
        events = ["failed"]
        exceptionFormat = "short"
    }
}

configurations {
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

publish.dependsOn build
publish.mustRunAfter build

tasks.preTagCommit.enabled = false
tasks.updateVersion.enabled = false
tasks.commitNewVersion.enabled = false
